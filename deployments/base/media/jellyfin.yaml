apiVersion: v1
kind: Pod
metadata:
  name: jellyfin
  namespace: random-workloads
  labels:
    app.kubernetes.io/name: jellyfin-pod
spec:
  containers:
    - image: jellyfin/jellyfin
      name: jellyfin
      volumeMounts:
        # TODO i think the problem with mounts like this is, that you cant change them via apply
        # i currently have to delete the whole pod and recreate it
        - name: test-volume
          mountPath: /media/shows
          subPath: shows/

        - name: test-volume
          mountPath: /media/movies
          subPath: movies/

        - name: test-volume
          mountPath: /config
          subPath: configs/jellyfin/
      ports:
        - containerPort: 8096
  volumes:
    - name: test-volume
      nfs:
        server: desktop
        path: /bigdata/media/
        readOnly: false
---
apiVersion: v1
kind: Service
metadata:
  name: jellyfin-service
  namespace: random-workloads
spec:
  selector:
    app.kubernetes.io/name: jellyfin-pod
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8096
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jellyfin-tls
  namespace: random-workloads
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  rules:
    - host: watch.nilsherzig.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: jellyfin-service
                port:
                  number: 80
  tls:
    - hosts:
        - watch.nilsherzig.com
      secretName: watch-secret
