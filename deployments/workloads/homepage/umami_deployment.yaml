apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: umami-db
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: umami-db
spec:
  replicas: 0
  selector:
    matchLabels:
      app: umami-db
  template:
    metadata:
      labels:
        app: umami-db
    spec:
      containers:
        - name: db
          image: postgres:15-alpine
          env:
            - name: POSTGRES_DB
              value: umami
            - name: POSTGRES_USER
              value: umami
            - name: POSTGRES_PASSWORD
              value: umami
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: umami-db-data
              mountPath: /var/lib/postgresql/data
              subPath: database
          readinessProbe:
            exec:
              command: ["pg_isready", "-U", "umami", "-d", "umami"]
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 5
            failureThreshold: 5
      volumes:
        - name: umami-db-data
          persistentVolumeClaim:
            claimName: umami-db
---
apiVersion: v1
kind: Service
metadata:
  name: umami-db
spec:
  selector:
    app: umami-db
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: umami
spec:
  replicas: 1 # Scaled to 2 instances
  selector:
    matchLabels:
      app: umami
  template:
    metadata:
      labels:
        app: umami
    spec:
      containers:
        - name: umami
          image: ghcr.io/umami-software/umami:postgresql-latest
          env:
            - name: DATABASE_URL
              value: postgresql://umami:umami@homepage-umami-db:5432/umami
            - name: DATABASE_TYPE
              value: postgresql
            - name: APP_SECRET
              value: replace-me-with-a-random-string
          ports:
            - containerPort: 3000
          readinessProbe:
            httpGet:
              path: /api/heartbeat
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 5
            failureThreshold: 5
---
apiVersion: v1
kind: Service
metadata:
  name: umami
spec:
  selector:
    app: umami
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
  type: LoadBalancer
