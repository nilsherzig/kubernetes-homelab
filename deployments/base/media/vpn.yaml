apiVersion: v1
kind: ConfigMap
metadata:
  name: qbittorrent-configmap
  namespace: random-workloads
data:
  qBittorrent.conf: |
    [AutoRun]
    OnTorrentAdded\Enabled=false
    OnTorrentAdded\Program=
    enabled=false
    program=

    [BitTorrent]
    Session\Interface=wg0
    Session\InterfaceName=wg0
    Session\AddExtensionToIncompleteFiles=true
    Session\AlternativeGlobalDLSpeedLimit=1000
    Session\AlternativeGlobalUPSpeedLimit=1
    Session\BandwidthSchedulerEnabled=true
    Session\DHTEnabled=true
    Session\DefaultSavePath=/downloads/
    Session\ExcludedFileNames=
    Session\GlobalDLSpeedLimit=0
    Session\GlobalMaxRatio=2
    Session\GlobalMaxSeedingMinutes=10080
    Session\GlobalUPSpeedLimit=0
    Session\IgnoreSlowTorrentsForQueueing=true
    Session\LSDEnabled=true
    Session\MaxActiveDownloads=1
    Session\MaxActiveTorrents=3000
    Session\MaxActiveUploads=3000
    Session\MaxRatioAction=3
    Session\PeXEnabled=true
    Session\Port=14801
    Session\QueueingSystemEnabled=false
    Session\SlowTorrentsDownloadRate=100
    Session\SlowTorrentsUploadRate=100
    Session\TempPath=/downloads/incomplete/
    Session\TempPathEnabled=true
    Session\UseAlternativeGlobalSpeedLimit=true

    [Core]
    AutoDeleteAddedTorrentFile=Never

    [LegalNotice]
    Accepted=true

    [Meta]
    MigrationVersion=4

    [Network]
    Cookies=@Invalid()
    PortForwardingEnabled=false
    Proxy\OnlyForTorrents=false

    [Preferences]
    Advanced\RecheckOnCompletion=false
    Advanced\trackerPort=9000
    Advanced\trackerPortForwarding=false
    Connection\PortRangeMin=6881
    Connection\ResolvePeerCountries=true
    Connection\UPnP=false
    Downloads\SavePath=/downloads/
    Downloads\TempPath=/downloads/incomplete/
    DynDNS\DomainName=changeme.dyndns.org
    DynDNS\Enabled=false
    DynDNS\Password=
    DynDNS\Service=DynDNS
    DynDNS\Username=
    General\Locale=en
    MailNotification\email=
    MailNotification\enabled=false
    MailNotification\password=
    MailNotification\req_auth=true
    MailNotification\req_ssl=false
    MailNotification\sender=qBittorrent_notification@example.com
    MailNotification\smtp_server=smtp.changeme.com
    MailNotification\username=
    Scheduler\days=EveryDay
    Scheduler\end_time=@Variant(\0\0\0\xf\x4\xefm\x80)
    Scheduler\start_time=@Variant(\0\0\0\xf\x1\x80\x85\x80)
    WebUI\Address=*
    WebUI\AlternativeUIEnabled=false
    WebUI\AuthSubnetWhitelistEnabled=false
    WebUI\BanDuration=3600
    WebUI\CSRFProtection=true
    WebUI\ClickjackingProtection=true
    WebUI\CustomHTTPHeaders=
    WebUI\CustomHTTPHeadersEnabled=false
    WebUI\HTTPS\CertificatePath=
    WebUI\HTTPS\Enabled=false
    WebUI\HTTPS\KeyPath=
    WebUI\HostHeaderValidation=false
    WebUI\LocalHostAuth=true
    WebUI\MaxAuthenticationFailCount=5
    WebUI\Port=8080
    WebUI\ReverseProxySupportEnabled=false
    WebUI\RootFolder=
    WebUI\SecureCookie=true
    WebUI\ServerDomains=*
    WebUI\SessionTimeout=3600
    WebUI\TrustedReverseProxiesList=
    WebUI\UseUPnP=false
    WebUI\Username=admin

    [RSS]
    AutoDownloader\DownloadRepacks=true
    AutoDownloader\SmartEpisodeFilter=s(\\d+)e(\\d+), (\\d+)x(\\d+), "(\\d{4}[.\\-]\\d{1,2}[.\\-]\\d{1,2})", "(\\d{1,2}[.\\-]\\d{1,2}[.\\-]\\d{4})"
---
apiVersion: v1
kind: Pod
metadata:
  name: sidecar-test
  namespace: random-workloads
  labels:
    app.kubernetes.io/name: qbittorrent-pod
spec:
  containers:
    - name: sidecar-main
      image: nicolaka/netshoot
      command: ["tail"]
      args: ["-f", "/dev/null"]
    - name: qbitttorrent
      image: lscr.io/linuxserver/qbittorrent:latest
      volumeMounts:
        - name: downloads-volume
          mountPath: /downloads
          subPath: downloads
        - name: qbittorrent-config
          mountPath: /config/qBittorrent/qBittorrent.conf
          subPath: qBittorrent.conf
      env:
        - name: PUID
          value: "1000"
        - name: PGUI
          value: "1000"
        - name: TZ
          value: "Europe/Berlin"
        - name: WEBUI_PORT
          value: "8080"
      ports:
        - containerPort: 8080
    - name: wireguard
      image: ghcr.io/linuxserver/wireguard
      imagePullPolicy: IfNotPresent
      securityContext:
        privileged: true
        capabilities:
          add:
            - NET_ADMIN
            - SYS_MODULE
        allowPrivilegeEscalation: true
        readOnlyRootFilesystem: false
      volumeMounts:
        - name: test-volume
          mountPath: /config
          subPath: configs/wireguard/
  securityContext:
    fsGroup: 1000
  volumes:
    - name: qbittorrent-config
      configMap:
        name: qbittorrent-configmap
    - name: test-volume
      nfs:
        server: desktop
        path: /bigdata/media/
        readOnly: false
    - name: downloads-volume
      nfs:
        server: desktop
        path: /bigdata/media/
        readOnly: false
---
apiVersion: v1
kind: Service
metadata:
  name: qbittorrent-service
  namespace: random-workloads
spec:
  selector:
    app.kubernetes.io/name: qbittorrent-pod
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: qbittorrent-tls
  namespace: random-workloads
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  rules:
    - host: qbittorrent.nilsherzig.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: qbittorrent-service
                port:
                  number: 80
  tls:
    - hosts:
        - qbittorrent.nilsherzig.com
      secretName: tls-qbittorrent
